(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{440:function(t,s,a){"use strict";a.r(s);var n=a(29),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" Git")]),t._v(" "),a("h2",{attrs:{id:"git-基础"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-基础"}},[t._v("#")]),t._v(" Git 基础")]),t._v(" "),a("h3",{attrs:{id:"初始化用户信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#初始化用户信息"}},[t._v("#")]),t._v(" 初始化用户信息")]),t._v(" "),a("p",[t._v("当前用户所有仓库配置方式：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'your_name'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'your_email'")]),t._v("\n")])])]),a("p",[t._v("仅对某仓库用户信息配置方式：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --local user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'your_name'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --local user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'your_email'")]),t._v("\n")])])]),a("p",[t._v("对系统所有登录的用户配置：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --system user.name "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'your_name'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --system user.email "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'your_email'")]),t._v("\n")])])]),a("p",[t._v("优先级是local 大于 global，即如果当前设置了local，则优先使用local配置信息。")]),t._v(" "),a("p",[t._v("显示config的方式：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取相应作用域的全部配置信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global --list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("--global"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取当个配置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --get user.name\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取当前仓库的信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --local --list\n")])])]),a("h3",{attrs:{id:"获取git仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#获取git仓库"}},[t._v("#")]),t._v(" 获取Git仓库")]),t._v(" "),a("p",[t._v("方式一：将未进行版本控制的本地目录转为Git仓库")]),t._v(" "),a("blockquote",[a("p",[t._v("通过进入当前目录文件夹，通过git初始化命令，创建本地Git仓库")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n")])])])]),t._v(" "),a("p",[t._v("方式二：从其他服务器clone一个仓库到本地")]),t._v(" "),a("blockquote",[a("p",[t._v("通过获取远程仓库的地址，将远程仓库clone到本地")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])]),t._v(" "),a("h3",{attrs:{id:"git常用操作命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git常用操作命令"}},[t._v("#")]),t._v(" git常用操作命令")]),t._v(" "),a("p",[t._v("在git目录下的文件一共有两种状态："),a("strong",[t._v("已跟踪")]),t._v("或"),a("strong",[t._v("未跟踪")]),t._v("。")]),t._v(" "),a("p",[t._v("已跟踪的文件是指被纳入版本控制管理的文件，即git已经知道的文件，这个文件的状态有:")]),t._v(" "),a("ul",[a("li",[t._v("未修改")]),t._v(" "),a("li",[t._v("已修改")]),t._v(" "),a("li",[t._v("暂存区")])]),t._v(" "),a("p",[t._v("已跟踪文件以外的所有文件都属于未跟踪文件。")]),t._v(" "),a("blockquote",[a("p",[t._v("实际工作中，可以将修改过的文件存入"),a("strong",[t._v("暂存区")]),t._v("，然后提交所有暂存的修改。")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看当前仓库状态的命令:")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#简化当前仓库状态信息：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status -s\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#跟踪一个文件：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("文件或目录"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#重命名文件：")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mv")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看修改文件前后对比")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("--staged/--cached"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#提交更新")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'说明提交内容'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#跳过暂存区直接提交")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -a \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -a -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'说明内容'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改最近一次提交的commit描述内容")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit --amend \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#修改commit历史内容,通过变基")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i xxxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("被修改commit信息的父级"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#整理过去commit，合并commit 选择策略")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase -i xxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("被修改最前面commit的父级"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#合并间隔的commit 调整commit顺序，将要合并的放在连续位置")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reabse -i xxxx\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#上传内容到master 分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin master\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#从git跟踪清单中移除某个文件(从暂存区中移除)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这样以后的修改不会出现在未跟踪的清单中")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#只从暂存区中移除，文件扔保留在当前目录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" --cached "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#也不会跟踪修改内容")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除之前修改或者已经存入暂存区的文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("filename"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -f\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看提交历史")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -2\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log -p "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示提交变更内容")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --stat "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示简略信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --pretty"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("online/short/full/fuller"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#不同方式显示")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --pretty"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("format:"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%h %s"')]),t._v(" --graph "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#图形化显示")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --oneline -n4 --graph\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#取消暂存文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" restore --staged "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("文件或路径"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset HARD "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("文件或路径"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" reset --hard HEAD或commitId "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#回复到头指针状态")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#撤销文件修改（危险）")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -- "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看所有远程仓库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote -v\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#添加远程仓库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("shortname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" weiloong git://git.xxxx.\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#拉取数据但不合并")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("remote"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看某个远程仓库信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote show origin\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#远程仓库重命名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rename")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("oldname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("newname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#移除远程仓库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote remove \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#暂存区与HEAD比较")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" --cached\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#暂存区与工作区比较")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#分支之间比较")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("diff")]),t._v(" 分支名或分支commit  分支名或分支commit\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" filename\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#临时存储分支上修改的内容")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash pop\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash apply\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" stash list\n\n")])])]),a("p",[t._v("对于仓库中需要忽略的文件，可以通过文件设置.gitignore，文件忽略的格式规则：")]),t._v(" "),a("ul",[a("li",[t._v("空行或以#开头的都会被Git忽略")]),t._v(" "),a("li",[t._v("可以使用glob模式匹配")]),t._v(" "),a("li",[t._v("匹配模式可以以/开头和结尾")]),t._v(" "),a("li",[t._v("要忽略指定模式以外的文件或目录，可以在模式前加！取反")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 忽略所以有 .a文件")]),t._v("\n*.a\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#但跟踪所有lib.a，即使设了忽略.a文件")]),t._v("\n！lib.a\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#只忽略当前目录下的的todo文件")]),t._v("\n/todo\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#忽略任何目录下build的文件夹")]),t._v("\nbuild/\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#忽略doc/note.txt 但不忽略doc/server/note.txt")]),t._v("\ndoc/*.txt\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#忽略doc目录下的所有以.pdf结尾的文件")]),t._v("\ndoc/**/*.pdf\n")])])]),a("h3",{attrs:{id:"标签"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标签"}},[t._v("#")]),t._v(" 标签")]),t._v(" "),a("p",[a("strong",[t._v("标签")]),t._v("用来表示重要节点或里程碑")]),t._v(" "),a("p",[t._v("标签分为轻标签和附注标签")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#轻标签")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag v1.4-lw\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#附注标签")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -a v1.4 -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'说明内容'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看标签信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" show v1.4\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对提交历史打标签")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -a v1.0 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("记录hash值"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除标签")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tagname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("默认情况下不会将本地的标签同步到远程仓库上，需要显示推送标签")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#单标签推送")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tagname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#多个标签同时推送")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin --tags\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除远程标签")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("remote"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":refs/tags/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tagname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin --delete "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tagname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[a("strong",[t._v("检出标签")]),t._v("是查看标签所指向的文件版本。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tagname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#有副作用，导致分离头指针的状态下，提交不属于任何分支并将无法访问")]),t._v("\n")])])]),a("p",[t._v("一般情况下，通过创建新分支")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branchname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("tagname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("可以通过alias设置git 命令的别名")]),t._v(" "),a("h2",{attrs:{id:"git-分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-分支"}},[t._v("#")]),t._v(" Git 分支")]),t._v(" "),a("p",[t._v("Git分支，本质上仅仅是指向提交对象的可变指针。默认分支为master.")]),t._v(" "),a("p",[t._v("git有特殊指针HEAD，用于"),a("strong",[t._v("指向当前所在的本地分支")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#创建分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#切换分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#创建并切换分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看提交历史、各个项目的分支情况")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" log --oneline --decorate --graph --all\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看每个分支最后一次提交")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -v\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#过滤列表中已经合并或尚未合并到当前分支的分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --merged/--no-merged\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("h4",{attrs:{id:"远程分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#远程分支"}},[t._v("#")]),t._v(" 远程分支")]),t._v(" "),a("p",[t._v("远程引用是对远程仓库的引用（指针），包括分支、标签等。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#显示查看远程引用的列表")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ls-remote "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("remote"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" ls-remote origin\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#获取远程分支的更多信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote show "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("remote"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote show origin\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#与远程仓库同步数据，")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("remote"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" fetch origin "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查找origin是哪个服务器，抓取本地没有的数据，并更新本地数据，移动指针到更新后的位置")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#更新远程分支到本地")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote update origin --prune\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#创建分支并跟踪远程的分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("remote"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("branch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout --track origin/serverfix\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#设置已有的本地分支跟踪一个远程拉下来的分支，或修改正在跟踪的上游分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -u origin/master\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch --set-upstream-to origin/master\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查看设置的所有跟踪分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch -vv\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除远程分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin --delete "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("remote"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#备份仓库")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone --bare file://xxxx目录/.git  zhineng.git "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#bare不带工作区")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" 本地仓库 远端仓库\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push --set-upstream xxxx  xxxx\n\n")])])]),a("blockquote",[a("p",[t._v("origin 是当运行git clone时默认的远程仓库的名字。")]),t._v(" "),a("p",[t._v("若git clone -o weiloong，那默认远程分支的名字将是weiloong/master")])]),t._v(" "),a("h4",{attrs:{id:"变基"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变基"}},[t._v("#")]),t._v(" 变基")]),t._v(" "),a("p",[t._v("git中整合来自不同分支的方法：merge和rebase")]),t._v(" "),a("p",[t._v("可以使用 rebase 命令将提交到某一分支上的所有修改都移至另一分支上")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#变基到master上")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout experiment\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase master\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#取出 client 分支，找出它从 server 分支分歧之后的补丁， 然后把这些补丁在 master 分支上重放一遍，让 client 看起来像直接基于 master 修改一样")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase --onto master server client\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge client\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#决定将 server 分支中的修改也整合进来")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" rebase master server\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" merge server\n")])])]),a("p",[t._v("变基准则："),a("strong",[t._v("如果提交存在于你的仓库之外，而别人可能基于这些提交进行开发，那么不要执行变基")])]),t._v(" "),a("p",[t._v("变基操作的实质是丢弃一些现有的提交，然后相应地新建一些内容一样但实际上不同的提交")]),t._v(" "),a("p",[a("strong",[t._v("查看网页版命令文档")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" --web "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v("\n")])])]),a("p",[t._v("命令查看git 类型、内容")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cat-file -t bcd972fd4\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" cat-file -p bcd972fd4\n")])])]),a("p",[t._v("git 三大类型 commit、tree、blob之间关系")]),t._v(" "),a("p",[t._v("commit -> tree -> blob")]),t._v(" "),a("h4",{attrs:{id:"分离头指针"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分离头指针"}},[t._v("#")]),t._v(" 分离头指针")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout xxxxx"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#此时头指针指向此commit， 如果现在直接切换到其他分支，将导致修改不会保存")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout master"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#现在要找回前面的修改，可以新建分支 git checkout <new-branch> xxxxx")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#HEAD指针不执行分支或tag，修改内容在将来是不会纳入管理保存的。")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);